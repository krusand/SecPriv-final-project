filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_epsilon_half = rlaplace(n=nrow(.),s=1/0.5)) %>%
mutate(dis_epsilon_five = rlaplace(n=nrow(.),s=1/5)) %>%
mutate(dis_epsilon_half_binary = case_when(
dis_epsilon_half > 0.5 ~ 1,
T ~ 0
)) %>%
mutate(
dis_epsilon_five_binary = case_when(
dis_epsilon_five > 0.5 ~ 1,
T ~ 0
)) %>%
mutate(dis_epsilon_five_sample = runif(n=nrow(.))) %>%
mutate(dis_epsilon_half_sample = runif(n=nrow(.))))
laplace_eusilc <- modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_epsilon_half = rlaplace(n=nrow(.),s=1/0.5)) %>%
mutate(dis_epsilon_five = rlaplace(n=nrow(.),s=1/5)) %>%
mutate(dis_epsilon_half_binary = case_when(
dis_epsilon_half > 0.5 ~ 1,
T ~ 0
)) %>%
mutate(
dis_epsilon_five_binary = case_when(
dis_epsilon_five > 0.5 ~ 1,
T ~ 0
)) %>%
mutate(dis_epsilon_five_sample = runif(n=nrow(.))) %>%
mutate(dis_epsilon_half_sample = runif(n=nrow(.)))
View(laplace_eusilc)
laplace_eusilc <- modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_epsilon_half = rlaplace(n=nrow(.),s=1/(0.5))) %>%
mutate(dis_epsilon_five = rlaplace(n=nrow(.),s=1/5)) %>%
mutate(dis_epsilon_half_binary = case_when(
dis_epsilon_half > 0.5 ~ 1,
T ~ 0
)) %>%
mutate(
dis_epsilon_five_binary = case_when(
dis_epsilon_five > 0.5 ~ 1,
T ~ 0
)) %>%
mutate(dis_epsilon_five_sample = runif(n=nrow(.))) %>%
mutate(dis_epsilon_half_sample = runif(n=nrow(.)))
table(laplace_eusilc$q_fed_state, laplace_eusilc$dis)
table(laplace_eusilc$q_fed_state, laplace_eusilc$dis_epsilon_half_binary)
table(laplace_eusilc$q_fed_state, laplace_eusilc$dis_epsilon_five_binary)
laplace_eusilc <- modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_epsilon_half = rlaplace(n=nrow(.),s=1/(0.5))) %>%
mutate(dis_epsilon_five = rlaplace(n=nrow(.),s=1/5)) %>%
mutate(dis_epsilon_half_binary = case_when(
dis_epsilon_half > 0.5 ~ 1,
T ~ 0
)) %>%
mutate(
dis_epsilon_five_binary = case_when(
dis_epsilon_five > 0.5 ~ 1,
T ~ 0
))
1 / (1 + exp(0.5))
1 / (1 + exp(5))
modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_five_sample = runif(n=nrow(.))) %>%
View()
p <- 1 / (1 + exp(5))
p <- 1 / (1 + exp(5))
modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_five_sample = runif(n=nrow(.))) %>%
mutate(case_when(
dis_five_sample < p ~ !dis
)) %>%
View()
modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_five_sample = runif(n=nrow(.))) %>%
mutate(case_when(
dis_five_sample < p ~ as.numeric(!dis)
)) %>%
View()
modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_five_sample = runif(n=nrow(.))) %>%
mutate(case_when(
dis_five_sample <= p ~ as.numeric(!dis),
dis_five_sample > p ~ as.numeric(dis)
)) %>%
View()
modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_five_sample = runif(n=nrow(.))) %>%
mutate(rand_dis = case_when(
dis_five_sample <= p ~ as.numeric(!dis),
dis_five_sample > p ~ as.numeric(dis)
)) %>%
View()
randomised_response_eusilc <- modified_eusilc %>%
select(q_fed_state,s_disability_benefits) %>%
filter(!is.na(s_disability_benefits)) %>%
mutate(dis = case_when(
s_disability_benefits > 0 ~ 1,
T ~ 0
)) %>%
mutate(dis_five_sample = runif(n=nrow(.))) %>%
mutate(rand_dis = case_when(
dis_five_sample <= p ~ as.numeric(!dis),
dis_five_sample > p ~ as.numeric(dis)
))
table(randomised_response_eusilc$dis, randomised_response_eusilc$rand_dis)
table(randomised_response_eusilc$q_fed_state, randomised_response_eusilc$rand_dis)
table(laplace_eusilc$q_fed_state, laplace_eusilc$dis)
table(laplace_eusilc$q_fed_state, laplace_eusilc$dis_epsilon_five_binary)
install.packages("Brobdingnag")
library(Brobdingnag)
as.brob(2)
library(Brobdingnag)
library(tidyverse)
library(openxlsx)
read.xlsx('/Users/krusand/Library/CloudStorage/OneDrive-Personligt/ITU/5. Semester/Security & Privacy/Mandatory/problem1.xlsx')
problem1_raw <- read.xlsx('/Users/krusand/Library/CloudStorage/OneDrive-Personligt/ITU/5. Semester/Security & Privacy/Mandatory/problem1.xlsx')
library(Brobdingnag)
library(tidyverse)
library(openxlsx)
problem1_raw <- read.xlsx('/Users/krusand/Library/CloudStorage/OneDrive-Personligt/ITU/5. Semester/Security & Privacy/Mandatory/problem1.xlsx')
problem1_raw
View(problem1_raw)
problem1_raw %>%
pivot_longer(names_to = "gender", values_to = "n")
problem1_raw %>%
pivot_longer(cols=c(Men, Women),names_to = "gender", values_to = "n")
problem1 <- problem1_raw %>%
pivot_longer(cols=c(Men, Women),names_to = "gender", values_to = "n")
View(problem1_raw)
View(problem1)
problem1 %>%
filter(n == 1)
View(problem1_raw)
problem1 %>%
filter(n == 1) %>%
nrow()
n_uniquely_identifiable <- problem1 %>%
filter(n == 1) %>%
nrow()
problem1 %>%
nrow()
problem1 %>%
filter(n == 1) %>% View()
View(problem1_raw)
View(problem1)
problem1_raw
problem1_raw %>%
filter(Men == 1)
problem1_raw %>%
filter(Men == 1) %>%
pull(Men)
sum(problem1_raw %>%
filter(Men == 1) %>%
pull(Men)) + sum(problem1_raw %>%
filter(Women == 1) %>%
pull(Women))
n_uniquely_identifiable / sum(problem1$n)
options(scipen = 999)
n_uniquely_identifiable / sum(problem1$n)
problem1
1000 * 365^(1-1000)
1000 * 365^as.brob(1-1000)
1000 * 365^as.brob(1-1000) * 364^as.brob(1-1000)
as.numeric(1000 * 365^as.brob(1-1000) * 364^as.brob(1-1000))
as.numeric(1000 * as.brob(1-1000)^365 * as.brob(1-1000)^364)
as.brob(1-1000)^365
364^as.brob(1-1000)
as.numeric(364^as.brob(1-1000))
as.numeric(as.brob(1000) * 365^as.brob(1-1000) * 364^as.brob(1-1000))
as.brob(1000) * 365^as.brob(1-1000) * 364^as.brob(1-1000)
as.brob(1000) * as.brob(1-1000)^365 * as.brob(1-1000)^364
as.numeric(as.brob(1000) * as.brob(1-1000)^365 * as.brob(1-1000)^364)
as.brob(1000) * as.brob(1-1000)^365 * as.brob(1-1000)^364
as.brob(1000) * as.brob(1-1000)^365 * 364^as.brob(1000-1)
as.numeric(as.brob(1000) * as.brob(1-1000)^365 * 364^as.brob(1000-1))
as.numeric(as.brob(1000) * as.brob(1-1000)^365 *
364^as.brob(1000-1))
as.numeric(1000 *
as.brob(1-1000)^365 *
364^as.brob(1000-1))
1000 *
as.brob(1-1000)^365 *
364^as.brob(1000-1)
1000 *
365^as.brob(1-1000) *
as.brob(1000-1)^364
as.numeric(1000 *
365^as.brob(1-1000) *
as.brob(1000-1)^364)
1000 *
365^as.brob(1-1000) *
as.brob(1000-1)^364
1000 *
365^(1-n) *
364^(n-1)
n <- 1000
n * 365^(1-n) * 364^(n-1)
n * as.brob(365)^(1-n) * 364^as.brob(n-1)
as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1)))
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
View()
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = sum(n_people_with_unique_birthday))
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = sum(n_people_with_unique_birthday) / sum(n))
problem2 <- read.csv('/Users/krusand/Library/CloudStorage/OneDrive-Personligt/ITU/5. Semester/Security & Privacy/Mandatory/problem2.csv')
View(problem2)
View(problem2)
problem2 %>%
count(region, age)
problem2 %>%
count(region, age) %>%
filter(n==1)
problem2 %>%
count(region, age) %>%
filter(n==1) %>%
nrow()
problem2 %>%
count(sex, citizenship, num_children)
problem2 %>%
count(sex, citizenship, num_children) %>%
View()
eusilc_freq
problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
View()
library(tidyverse)
library(laeken)
library(rmutil)
data("eusilc")
modified_eusilc <- eusilc %>%
rename(s_household_ID = db030,
q_fed_state = db040,
s_personal_id = rb030,
q_gender = rb090,
q_age = age,
q_economic_status = pl030,
q_citizenship = pb220a,
s_employee_cash = py010n,
s_self_employment_cash = py050n,
s_unemployment_benefits = py090n,
s_old_age_benefits = py100n,
s_survivor_benefits = py110n,
s_sickness_benefits = py120n,
s_disability_benefits = py130n,
s_education_related_allowances = py140n,
s_rental_property_income = hy040n,
s_family_related_allowances = hy050n,
s_housing_allowances = hy070n,
s_inter_household_cash_received = hy080n,
s_profit_from_unincorporated_business=hy090n,
s_income_received_under_16=hy110n,
s_inter_household_cash_paid=hy130n,
s_tax_adjustment=hy145n,
s_OECD_hsize=eqSS,
s_household_income=eqIncome,
s_household_sample_weights=db090,
s_personal_sample_weights=rb050)
eusilc_freq <- modified_eusilc %>%
group_by(q_fed_state, q_age,q_gender,q_economic_status) %>%
mutate(n_records = n()) %>%
select(s_personal_id,q_fed_state, q_age,q_gender,q_economic_status,n_records) %>%
ungroup()
View(eusilc_freq)
eusilc_freq %>%
count(n_records) %>%
View()
eusilc_freq %>%
filter(s_personal_id %in% c(301,103)) %>%
View()
problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(sex,citizenship, num_children)
problem2 %>%
select(sex,citizenship, num_children) %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(sex,citizenship, num_children) %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(freq = 1 / n) %>%
View()
library(sdcMicro)
install.packages("sdcMicro")
100*n_uniquely_identifiable / sum(problem1$n)
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = sum(n_people_with_unique_birthday) / sum(n))
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = 100*sum(n_people_with_unique_birthday) / sum(n))
n_people_with_unique_birthday
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = 100*sum(n_people_with_unique_birthday) / sum(n))
library(sdcMicro)
createSdcObj(problem2)
createSdcObj(problem2, keyVars = c(sex, citizenship, num_children))
problem2
createSdcObj(problem2, keyVars = c("sex", "citizenship", "num_children"))
sdc_problem2 <- createSdcObj(problem2, keyVars = c("sex", "citizenship", "num_children"))
freq(sdc_problem2)
sdc_problem2@risk$individual
bind_cols(sdc_problem2@risk$individual)
bind_cols(problem_2,sdc_problem2@risk$individual)
bind_cols(problem2,sdc_problem2@risk$individual)
bind_cols(problem2,sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>% count(sex,citizenship,num_children),sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>% count(sex,citizenship,num_children),sdc_problem2@risk$individual)
bind_cols(problem2 %>% group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>% ungroup(),sdc_problem2@risk$individual)
bind_cols(problem2 %>% group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>% ungroup(),sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual) %>%
summarise(avg_risk = mean(risk))
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual)) %>%
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual) %>%
summarise(avg_risk = mean(risk))
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n) %>%
ungroup(),
sdc_problem2@risk$individual) %>%
summarise(avg_risk = mean(risk))
problem2
problem2 %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
))
problem2 %>%
select(citizenship, region, criminal_record)
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
count(citizenship, region)
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
group_by(citizenship, region) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
group_by(citizenship, region) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct()) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct(criminal_record)) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct(criminal_record)) %>%
filter(n==1)
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct(criminal_record)) %>%
filter(n==1) %>%
View()
p <- 1 / (1+exp(1.5))
n_yes <- 327
n_no <- 709
p*n_no + (1-p)*n_yes
eps_1 = solve(1/eps = 2)
eps_1 = solve(1/eps, 2)
1/125
n_total <- n_yes + n_no
n_yes - (p*n_total) / (1- 2*p)
eps_2 = 1/125
eps_1 = 1/2
eps_2 = 1/125
eps_1 + eps_2
eps_1 = 2
eps_2 = 125
eps_1 + eps_2
(n_yes - (p*n_total)) / (1- 2*p)
eps_1 = 1/2
eps_2 = 1/125
eps_1 + eps_2
exp(eps_1 + eps_2)
exp(max(eps_1,eps_2))
exp(2)
eps_1 = 100/2
eps_2 = 100/125
exp(eps_1 + eps_2)
(eps_1 + eps_2)
eps_1 = (100-1)/2
eps_2 = (100-1)/125
(eps_1 + eps_2)
eps_1 = 1/2
eps_2 = 100/125
(eps_1 + eps_2)
library(openxlsx)
getwd()
setwd("/Users/krusand/Documents/GitHub/SecPriv-final-project/data/anonymized")
data <- read.xlsx("anonymized_data.xlsx")
View(data)
data %>%
write.csv("anonymised_dataU.csv")
library(tidyverse)
data %>%
write.csv("anonymised_dataU.csv")
