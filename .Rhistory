s_tax_adjustment=hy145n,
s_OECD_hsize=eqSS,
s_household_income=eqIncome,
s_household_sample_weights=db090,
s_personal_sample_weights=rb050)
eusilc_freq <- modified_eusilc %>%
group_by(q_fed_state, q_age,q_gender,q_economic_status) %>%
mutate(n_records = n()) %>%
select(s_personal_id,q_fed_state, q_age,q_gender,q_economic_status,n_records) %>%
ungroup()
View(eusilc_freq)
eusilc_freq %>%
count(n_records) %>%
View()
eusilc_freq %>%
filter(s_personal_id %in% c(301,103)) %>%
View()
problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(sex,citizenship, num_children)
problem2 %>%
select(sex,citizenship, num_children) %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(sex,citizenship, num_children) %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(freq = 1 / n) %>%
View()
library(sdcMicro)
install.packages("sdcMicro")
100*n_uniquely_identifiable / sum(problem1$n)
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = sum(n_people_with_unique_birthday) / sum(n))
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = 100*sum(n_people_with_unique_birthday) / sum(n))
n_people_with_unique_birthday
problem1 %>%
mutate(n_people_with_unique_birthday = as.numeric(n * as.brob(365)^(1-n) * 364^as.brob(n-1))) %>%
summarise(total = 100*sum(n_people_with_unique_birthday) / sum(n))
library(sdcMicro)
createSdcObj(problem2)
createSdcObj(problem2, keyVars = c(sex, citizenship, num_children))
problem2
createSdcObj(problem2, keyVars = c("sex", "citizenship", "num_children"))
sdc_problem2 <- createSdcObj(problem2, keyVars = c("sex", "citizenship", "num_children"))
freq(sdc_problem2)
sdc_problem2@risk$individual
bind_cols(sdc_problem2@risk$individual)
bind_cols(problem_2,sdc_problem2@risk$individual)
bind_cols(problem2,sdc_problem2@risk$individual)
bind_cols(problem2,sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>% count(sex,citizenship,num_children),sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>% count(sex,citizenship,num_children),sdc_problem2@risk$individual)
bind_cols(problem2 %>% group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>% ungroup(),sdc_problem2@risk$individual)
bind_cols(problem2 %>% group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>% ungroup(),sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual) %>%
View()
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual) %>%
summarise(avg_risk = mean(risk))
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual)) %>%
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n),
sdc_problem2@risk$individual) %>%
summarise(avg_risk = mean(risk))
bind_cols(problem2 %>%
group_by(sex, citizenship, num_children) %>%
mutate(n=n()) %>%
mutate(fr = 1/n) %>%
ungroup(),
sdc_problem2@risk$individual) %>%
summarise(avg_risk = mean(risk))
problem2
problem2 %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
))
problem2 %>%
select(citizenship, region, criminal_record)
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
count(citizenship, region)
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
group_by(citizenship, region) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
mutate(citizenship = case_when(
citizenship == 'Danish' ~ citizenship,
T ~ 'Non-Danish'
)) %>%
group_by(citizenship, region) %>%
mutate(n=n()) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct()) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct(criminal_record)) %>%
View()
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct(criminal_record)) %>%
filter(n==1)
problem2 %>%
select(citizenship, region, criminal_record) %>%
group_by(citizenship, region) %>%
mutate(n=n_distinct(criminal_record)) %>%
filter(n==1) %>%
View()
p <- 1 / (1+exp(1.5))
n_yes <- 327
n_no <- 709
p*n_no + (1-p)*n_yes
eps_1 = solve(1/eps = 2)
eps_1 = solve(1/eps, 2)
1/125
n_total <- n_yes + n_no
n_yes - (p*n_total) / (1- 2*p)
eps_2 = 1/125
eps_1 = 1/2
eps_2 = 1/125
eps_1 + eps_2
eps_1 = 2
eps_2 = 125
eps_1 + eps_2
(n_yes - (p*n_total)) / (1- 2*p)
eps_1 = 1/2
eps_2 = 1/125
eps_1 + eps_2
exp(eps_1 + eps_2)
exp(max(eps_1,eps_2))
exp(2)
eps_1 = 100/2
eps_2 = 100/125
exp(eps_1 + eps_2)
(eps_1 + eps_2)
eps_1 = (100-1)/2
eps_2 = (100-1)/125
(eps_1 + eps_2)
eps_1 = 1/2
eps_2 = 100/125
(eps_1 + eps_2)
# Setup
setwd("/Users/krusand/Documents/GitHub/SecPriv-final-project/")
library(tidyverse)
library(openxlsx)
library(rworldmap)
library(sdcMicro)
data(countryExData)
country_region <- countryExData %>%
select(Country, m_region = GEO_subregion)
countryExData
private_data
# Setup
setwd("/Users/krusand/Documents/GitHub/SecPriv-final-project/")
library(tidyverse)
library(openxlsx)
library(rworldmap)
library(sdcMicro)
data(countryExData)
country_region <- countryExData %>%
select(Country, m_region = GEO_subregion)
# Some countries not available, add these:
missing_countries <- tibble(
Country = c("Somalia", "Vietnam", "Yugoslavia"),
m_region = c("Eastern Africa", 'South East Asia', 'Central Europe')
)
country_region <- bind_rows(list(country_region, missing_countries))
# Load data
raw_private_data <- read.xlsx("data/raw/private_dataU.xlsx") %>%
mutate(dob = as.Date(dob, origin = '1899-12-30'))
# Identify and remove sensitive variables
sensitive_variables <- c("name")
private_data <- raw_private_data %>%
select(-all_of(sensitive_variables))
# Global recoding + TopBottom Recoding - DOB
dob_labs = c("<=1940s","1950s","1960s","1970s","1980s","1990s",">=2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob =
cut(year, breaks = c(0, 1949, 1959, 1969, 1979, 1989, 1999, Inf), labels=dob_labs)) %>%
View()
# PRAM - Marital status
possible_marital_status <- c("Never married", "Married/separated", "Divorced", "Widowed")
stay_prob <- 0.7
leave_prob <- 0.1
private_data %>%
mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(stay_prob,leave_prob,leave_prob,leave_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(leave_prob,stay_prob,leave_prob,leave_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(leave_prob,leave_prob,stay_prob,leave_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(leave_prob,leave_prob,leave_prob,stay_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
View()
# Global recoding - Citizenship
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
group_by(m_region) %>%
summarise(n=n()) %>%
View()
# PRAM - evote
possible_evote <- c(0,1)
stay_prob <- 1-sum(private_data$evote)/nrow(private_data)
leave_prob <- sum(private_data$evote)/nrow(private_data)
private_data %>%
mutate(m_evote = case_when(
evote == 0 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob)),
evote == 1 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob))
)) %>%
count(evote,m_evote) %>%
View()
# PRAM - party
possible_party <- c('Green','Red', 'Invalid vote')
stay_prob <- 0.9
leave_prob <- 0.05
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(m_party) %>%
View()
# SDC micro
private_data
selectedKeyVars = c('region', 'age', 'gender', 'marital', 'empstat')
# selected linked variables (ghost variables)
selectedGhostVars = c('urbrur')
# selected categorical numerical variables
selectedNumVar = c('wage', 'savings')
# weight variable
selectedWeightVar = c('wgt')
# selected pram variables
selectedPramVars = c('roof', 'wall')
# household id variable (cluster)
selectedHouseholdID = c('idh')
# stratification variable
selectedStrataVar = c('strata')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('health')
private_data
View(private_data)
selectedKeyVars = c('sex', 'evote', 'dob', 'zip', 'education', 'citizenship', 'marital_status')
# selected categorical numerical variables
selectedNumVar = c('evote', 'zip')
# selected pram variables
selectedPramVars = c('sex', 'evote', 'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- createSdcObj(dat         = private_data,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- createSdcObj(dat         = private_data,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- createSdcObj(dat         = private_data,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars)
sdcInitial <- createSdcObj(dat         = private_data,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
sensibleVar = selectedSensibleVar)
sdcInitial <- createSdcObj(dat         = private_data,
keyVars     = selectedKeyVars,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- createSdcObj(dat         = private_data %>% mutate(zip = as.numerical(zip)),
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- createSdcObj(dat         = private_data %>% mutate(zip = as.numeric(zip)),
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
localSuppression(sdcInitial)
sdcInitial <- createSdcObj(dat         = private_data %>% mutate(zip = as.numeric(zip)),
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
localSuppression(sdcInitial)
pram(obj = sdcInitial)
sdcInitial_2 <- localSuppression(sdcInitial, k = 5)
sdcInitial <- localSuppression(sdcInitial, k = 5)
print(sdcInitial, 'ls')
print(sdcInitial, 'pram')
sdcInitial <- localSuppression(sdcInitial, k = 5)
# selected pram variables
selectedPramVars = c('sex')#, 'evote', 'education', 'citizenship', 'marital_status')
sdcInitial <- createSdcObj(dat         = private_data %>% mutate(zip = as.numeric(zip)),
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- localSuppression(sdcInitial, k = 5)
# selected pram variables
selectedPramVars = c('evote')#, 'sex',  'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data %>% mutate(zip = as.numeric(zip)),
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- localSuppression(sdcInitial, k = 5)
sdcInitial <- pram(obj = sdcInitial)
private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote))
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote))
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote))
selectedKeyVars = c('sex', 'evote', 'dob', 'zip', 'education', 'citizenship', 'marital_status')
# selected categorical numerical variables
selectedNumVar = c('evote', 'zip')
# selected pram variables
selectedPramVars = c('evote')#, 'sex',  'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
print(objSDC, type="kAnon")
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote))
selectedKeyVars = c('sex', 'evote', 'dob', 'zip', 'education', 'citizenship', 'marital_status')
# selected categorical numerical variables
selectedNumVar = c('evote', 'zip')
# selected pram variables
selectedPramVars = c('evote')#, 'sex',  'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote))
View(private_data_sdc)
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.numeric(evote))
selectedKeyVars = c('sex', 'evote', 'dob', 'zip', 'education', 'citizenship', 'marital_status')
# selected categorical numerical variables
selectedNumVar = c('evote', 'zip')
# selected pram variables
selectedPramVars = c('evote')#, 'sex',  'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial
selectedKeyVars = c('sex', 'evote', 'dob', 'zip', 'education', 'citizenship', 'marital_status')
# selected pram variables
selectedPramVars = c('evote')#, 'sex',  'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
numVar      = selectedNumVar,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial
sdcInitial <- pram(obj = sdcInitial)
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote))
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial
sdcInitial <- pram(obj = sdcInitial)
print(objSDC, type="pram")
print(sdcInitial, type="pram")
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote)) %>%
mutate(sex=as.factor(sex)) %>%
mutate(education=as.factor(education)) %>%
mutate(citizenship=as.factor(citizenship)) %>%
mutate(marital_status=as.factor(marital_status)) %>%
selectedKeyVars = c('sex', 'evote', 'dob', 'zip', 'education', 'citizenship', 'marital_status')
private_data_sdc <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.factor(evote)) %>%
mutate(sex=as.factor(sex)) %>%
mutate(education=as.factor(education)) %>%
mutate(citizenship=as.factor(citizenship)) %>%
mutate(marital_status=as.factor(marital_status))
selectedKeyVars = c('sex', 'evote', 'dob', 'zip', 'education', 'citizenship', 'marital_status')
# selected pram variables
selectedPramVars = c('evote')#, 'sex',  'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial
sdcInitial <- pram(obj = sdcInitial)
print(sdcInitial, type="pram")
# selected pram variables
selectedPramVars = c('evote', 'sex',  'education', 'citizenship', 'marital_status')
# sensitive variables for l-diversity computation
selectedSensibleVar = c('party')
sdcInitial <- createSdcObj(dat         = private_data_sdc,
keyVars     = selectedKeyVars,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial
sdcInitial <- pram(obj = sdcInitial)
print(sdcInitial, type="pram")
localSuppression(obj = sdcInitial, k = 2)
private_data_sdc_ls <- private_data %>%
mutate(zip = as.numeric(zip)) %>%
mutate(evote = as.character(evote)) %>%
mutate(sex=as.character(sex)) %>%
mutate(education=as.character(education)) %>%
mutate(citizenship=as.character(citizenship)) %>%
mutate(marital_status=as.character(marital_status))
sdcInitial <- createSdcObj(dat         = private_data_sdc_ls,
keyVars     = selectedKeyVars,
pramVars    = selectedPramVars,
sensibleVar = selectedSensibleVar)
sdcInitial
localSuppression(obj = sdcInitial, k = 2)
