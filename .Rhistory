mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(stay_prob,leave_prob,leave_prob,leave_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(leave_prob,stay_prob,leave_prob,leave_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(leave_prob,leave_prob,stay_prob,leave_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(leave_prob,leave_prob,leave_prob,stay_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
View()
private_data %>%
group_by(across(.))
private_data %>%
group_by(everything())
private_data %>%
group_by(across(everything()))
private_data %>%
group_by(across(everything())) %>%
mutate(n=n())
private_data %>%
group_by(across(everything())) %>%
mutate(n=n()) %>%
View()
private_data %>%
group_by(sex) %>%
mutate(n=n()) %>%
View()
private_data %>%
group_by(sex) %>%
summarise(n=n()) %>%
View()
View(private_data)
private_data %>%
group_by(evote) %>%
summarise(n=n()) %>%
View()
private_data %>%
group_by(zip) %>%
summarise(n=n()) %>%
View()
private_data %>%
group_by(education) %>%
summarise(n=n()) %>%
View()
private_data %>%
group_by(citizenship) %>%
summarise(n=n()) %>%
View()
private_data %>%
group_by(marital_status) %>%
summarise(n=n()) %>%
View()
private_data %>%
group_by(party) %>%
summarise(n=n()) %>%
View()
private_data %>%
group_by(citizenship) %>%
summarise(n=n()) %>%
View()
install.packages("rworldmap")
library(rworldmap)
vignette('rworldmap')
> data(countryExData)
data(countryExData)
View(countryExData)
countryExData
countryExData %>%
select(Country, EPI_regions, GEO_subregion)
countryExData %>%
select(Country, EPI_regions, GEO_subregions) %>%
View()
countryExData %>%
select(Country, EPI_regions, GEO_subregion) %>%
View()
countryExData %>%
select(Country, EPI_regions, GEO_subregion) %>%
arrange(GEO_subregion, EPI_regions) %>%
View()
country_region <- countryExData %>%
select(Country, GEO_subregion) %>%
arrange(GEO_subregion, EPI_regions)
country_region <- countryExData %>%
select(Country, GEO_subregion)
private_data %>%
group_by(citizenship) %>%
left_join(country_region) %>%
View()
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
View()
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
View()
View(country_region)
missing_countries <- tibble(
Country = c("Somalia", "Vietnam", "Yugoslavia"),
GEO_subregion = c("Eastern Africa", 'South East Asia', 'Central Europe')
)
missing_countries
country_region <- bind_rows(list(country_region, missing_countries))
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
View()
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
View()
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
select(everything())
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
select(everything()) %>%
View()
country_region <- countryExData %>%
select(Country, m_region = GEO_subregion)
missing_countries <- tibble(
Country = c("Somalia", "Vietnam", "Yugoslavia"),
m_region = c("Eastern Africa", 'South East Asia', 'Central Europe')
)
country_region <- bind_rows(list(country_region, missing_countries))
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
View()
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
View()
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
group_by(m_region) %>%
summarise(n=n())
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
group_by(citizenship) %>%
summarise(n=n())
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
group_by(m_region) %>%
summarise(n=n())
library(sdcMicro)
localSupp(private_data)
createSdcObj(dat = private_data)
cols(private_data)
colnames
colnames(private_data)
createSdcObj(dat = private_data,
keyVars = c('sex','evote','dob','zip','education','citizenship','marital_status')
)
createSdcObj(dat = private_data,
keyVars = c('sex','evote','dob','zip','education','citizenship','marital_status'),
pramVars = c('marital_status', 'education', 'evote','party'),
)
createSdcObj(dat = private_data,
keyVars = c('sex','evote','dob','zip','education','citizenship','marital_status'),
pramVars = c('marital_status', 'education', 'evote','party')
)
sdcInitial <- createSdcObj(dat = private_data,
keyVars = c('sex','evote','dob','zip','education','citizenship','marital_status'),
pramVars = c('marital_status', 'education', 'evote','party')
)
sdcInitial
localSuppression(sdcInitial, k = 3)
localSuppression(sdcInitial, k = 2)
localSuppression(sdcInitial, k = 5)
sdcInitial <- createSdcObj(dat = private_data,
keyVars = c('sex','evote','dob','zip','education','citizenship','marital_status'),
pramVars = c('marital_status', 'education', 'evote','party')
)
sdcInitial <- pram(obj = sdcInitial)
private_data
sdcInitial <- pram(obj = sdcInitial, variables = c("marital_status"))
# Setup
setwd("/Users/krusand/Documents/GitHub/SecPriv-final-project/")
library(tidyverse)
library(openxlsx)
library(rworldmap)
library(sdcMicro)
data(countryExData)
country_region <- countryExData %>%
select(Country, m_region = GEO_subregion)
# Some countries not available, add these:
missing_countries <- tibble(
Country = c("Somalia", "Vietnam", "Yugoslavia"),
m_region = c("Eastern Africa", 'South East Asia', 'Central Europe')
)
country_region <- bind_rows(list(country_region, missing_countries))
# Load data
raw_private_data <- read.xlsx("data/raw/private_dataU.xlsx") %>%
mutate(dob = as.Date(dob, origin = '1899-12-30'))
# Identify and remove sensitive variables
sensitive_variables <- c("name")
private_data <- raw_private_data %>%
select(-all_of(sensitive_variables))
# Global recoding - DOB
dob_labs = c("1910s","1920s","1930s","1940s","1950s","1960s","1970s","1980s","1990s","2000s","2010s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1909, 1919, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009, 2019),
labels=dob_labs)) %>%
View()
# PRAM - Marital status
possible_marital_status <- c("Never married", "Married/separated", "Divorced", "Widowed")
stay_prob <- 0.7
leave_prob <- 0.1
private_data %>%
mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(stay_prob,leave_prob,leave_prob,leave_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(leave_prob,stay_prob,leave_prob,leave_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(leave_prob,leave_prob,stay_prob,leave_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(leave_prob,leave_prob,leave_prob,stay_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
View()
# Global recoding - Citizenship
private_data %>%
group_by(citizenship) %>%
left_join(country_region, by=c('citizenship' = 'Country')) %>%
group_by(m_region) %>%
summarise(n=n()) %>%
View()
# SDC
sdcInitial <- createSdcObj(dat = private_data,
keyVars = c('sex','evote','dob','zip','education','citizenship','marital_status'),
pramVars = c('marital_status', 'education', 'evote','party')
)
sdcInitial <- pram(obj = sdcInitial, variables = c("marital_status"),
pd = c())
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1909, 1919, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009, 2019),
labels=dob_labs)) %>%
View()
# Global recoding - DOB
dob_labs = c("<1930s","1940s","1950s","1960s","1970s","1980s","1990s",">2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009),
labels=dob_labs)) %>%
View()
# Global recoding - DOB
dob_labs = c("<=1930s","1940s","1950s","1960s","1970s","1980s","1990s",">=2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009),
labels=dob_labs)) %>%
View()
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009),
labels=dob_labs)) %>%
View()
# Global recoding - DOB
dob_labs = c("<=1930s","1940s","1950s","1960s","1970s","1980s","1990s",">=2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009),
labels=dob_labs)) %>%
View()
# Global recoding - DOB
dob_labs = c("<=1930s","1940s","1950s","1960s","1970s","1980s","1990s",">=2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999),
labels=dob_labs)) %>%
View()
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999, 2009),
labels=dob_labs)) %>%
View()
# Global recoding - DOB
dob_labs = c("<=1930s","1940s","1950s","1960s","1970s","1980s","1990s",">=2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(0,1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999),
labels=dob_labs)) %>%
View()
# Global recoding - DOB
dob_labs = c("<=1930s","1940s","1950s","1960s","1970s","1980s","1990s",">=2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(0, 1939, 1949, 1959, 1969, 1979, 1989, 1999, Inf),
labels=dob_labs)) %>%
View()
# Global recoding - DOB
dob_labs = c("<=1940s","1950s","1960s","1970s","1980s","1990s",">=2000s")
private_data %>%
mutate(year=year(dob)) %>%
mutate(m_dob = cut(year,
breaks = c(0, 1949, 1959, 1969, 1979, 1989, 1999, Inf),
labels=dob_labs)) %>%
View()
private_data$evote
sum(private_data$evote)/nrow(private_data)
stay_prob <- 1-sum(private_data$evote)/nrow(private_data)
leave_prob <- sum(private_data$evote)/nrow(private_data)
possible_evote <- c(1,0)
stay_prob <- 1-sum(private_data$evote)/nrow(private_data)
leave_prob <- sum(private_data$evote)/nrow(private_data)
private_data %>%
mutate(m_evote = case_when(
evote ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob)),
!evote ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob))
))
evote
possible_evote <- c(1,0)
stay_prob <- 1-sum(private_data$evote)/nrow(private_data)
leave_prob <- sum(private_data$evote)/nrow(private_data)
private_data %>%
mutate(m_evote = case_when(
evote ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob)),
!evote ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob))
))
private_data %>%
mutate(m_evote = case_when(
evote == 0 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob)),
evote == 1 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob))
))
private_data %>%
mutate(m_evote = case_when(
evote == 0 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob)),
evote == 1 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob))
)) %>%
View()
possible_evote <- c(0,1)
stay_prob <- 1-sum(private_data$evote)/nrow(private_data)
leave_prob <- sum(private_data$evote)/nrow(private_data)
private_data %>%
mutate(m_evote = case_when(
evote == 0 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob)),
evote == 1 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob))
)) %>%
View()
private_data %>%
mutate(m_evote = case_when(
evote == 0 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob)),
evote == 1 ~ sample(possible_evote, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob))
)) %>%
count(evote,m_evote) %>%
View()
private_data$marital_status
private_data %>% count(marital_status)
private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data))
private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Divorced')
private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Divorced') %>% pull(.)
possible_marital_status <- c("Never married", "Married/separated", "Divorced", "Widowed")
stay_prob <- 0.7
leave_prob <- 0.1
never_married_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Never married') %>% pull(.)
divorced_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Divorced') %>% pull(.)
married_sep_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Married/separated') %>% pull(.)
widowed_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Widowed') %>% pull(.)
never_married_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Never married') %>% pull(.)
married_sep_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Married/separated') %>% pull(.)
divorced_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Divorced') %>% pull(.)
widowed_prob <- private_data %>% count(marital_status) %>% mutate(frac = n/nrow(private_data)) %>% filter(marital_status == 'Widowed') %>% pull(.)
## using different probs
private_data %>%
mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
View()
## using different probs
private_data %>%
mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
View()
## using different probs
private_data %>%
mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
View()
## using different probs
private_data %>%
mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
distinct(marital_status, m_marital_status, n, nn)
## using different probs
private_data %>%
mutate(m_marital_status = case_when(
marital_status == 'Never married' ~ sample(possible_marital_status, size=nrow(.), replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Married/separated' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Divorced' ~ sample(possible_marital_status, size=nrow(.),replace = T, prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob)),
marital_status == 'Widowed' ~ sample(possible_marital_status, size=nrow(.), replace = T,prob = c(never_married_prob, married_sep_prob, divorced_prob, widowed_prob))
)) %>%
add_count(m_marital_status) %>%
add_count(marital_status) %>%
distinct(marital_status, m_marital_status, n, nn) %>%
View()
View(private_data)
private_data %>%
count(party)
private_data %>%
count(party) %>%
mutate(frac = n/sum(n))
probs <- c(0.52, 0.455, 0.025)
private_data %>%
mutate(m_evote = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(evote,m_evote) %>%
View()
# PRAM - party
possible_party <- c('Green','Red', 'Invalid vote')
stay_prob <- 0.9
leave_prob <- 0.1
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(party,m_party) %>%
View()
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(party) %>%
View()
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(m_party) %>%
View()
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(m_party) %>%
View()
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(party) %>%
View()
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(m_party) %>%
View()
# PRAM - party
possible_party <- c('Green','Red', 'Invalid vote')
stay_prob <- 0.9
leave_prob <- 0.05
private_data %>%
mutate(m_party = case_when(
party == 'Green' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(stay_prob, leave_prob, leave_prob)),
party == 'Red' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob,stay_prob, leave_prob)),
party == 'Invalid vote' ~ sample(possible_party, size=nrow(.), replace=T, prob=c(leave_prob, leave_prob,stay_prob))
)) %>%
count(m_party) %>%
View()
