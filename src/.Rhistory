# Create contingency tables
contingency_table_evote <- rbind(public_results_evote, private_survey_evote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
contingency_table_evote
view(public_results)
public_results <- public_results %>%
filter(party!="Invalid vote")
view(public_results)
# Set working directory dynamically
setwd(dirname(this.path()))
private_survey <- read_excel("../data/anonymized/anonymized_data.xlsx")
public_results_wide <- read_excel("../data/raw/public_data_resultsU.xlsx")
names(private_survey)[1] <- "sex"
names(private_survey)[2] <- "evote"
names(private_survey)[3] <- "dob"
names(private_survey)[4] <- "zip"
names(private_survey)[5] <- "education"
names(private_survey)[6] <- "citizenship_region"
names(private_survey)[7] <- "marital_status"
names(private_survey)[8] <- "party"
# Remove invalid votes
private_survey <- private_survey %>%
filter(party!="Invalid vote")
public_results <- public_results %>%
filter(party!="Invalid vote")
# Change name of first column in public_data_resultsU
names(public_results_wide)[1] <- "Voting_method"
#names(public_results_wide)[4] <- "Invalid vote"
view(public_results)
#names(public_results_wide)[4] <- "Invalid vote"
view(public_results_wide)
names(public_results_wide)[4] <- "Invalid vote"
view(public_results_wide)
# Remove row and columns with sum
public_results_wide <- public_results_wide[-nrow(public_results_wide), -4-5]
# Remove row and columns with sum
public_results_wide <- public_results_wide[-nrow(public_results_wide), c(-4,-5)]
view(public_results_wide)
# Set working directory dynamically
setwd(dirname(this.path()))
private_survey <- read_excel("../data/anonymized/anonymized_data.xlsx")
public_results_wide <- read_excel("../data/raw/public_data_resultsU.xlsx")
names(private_survey)[1] <- "sex"
names(private_survey)[2] <- "evote"
names(private_survey)[3] <- "dob"
names(private_survey)[4] <- "zip"
names(private_survey)[5] <- "education"
names(private_survey)[6] <- "citizenship_region"
names(private_survey)[7] <- "marital_status"
names(private_survey)[8] <- "party"
# Remove invalid votes
private_survey <- private_survey %>%
filter(party!="Invalid vote")
# Change name of first column in public_data_resultsU
names(public_results_wide)[1] <- "Voting_method"
names(public_results_wide)[4] <- "Invalid vote"
view(public_results_wide)
# Remove row and columns with sum
public_results_wide <- public_results_wide[-nrow(public_results_wide), c(-4,-5)]
view(public_results_wide)
# Transform dataframe to long format
public_results <- public_results_wide %>%
pivot_longer(
cols = `Red`:`Invalid vote`,
names_to = "party",
values_to = "count"
) %>%
mutate(source = "Result")
# Transform dataframe to long format
public_results <- public_results_wide %>%
pivot_longer(
cols = `Red`:`Green`,
names_to = "party",
values_to = "count"
) %>%
mutate(source = "Result")
public_results_evote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 1) %>%
group_by(source, party) %>%
summarise(count = sum(count))
public_results_psvote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 0) %>%
group_by(source, party) %>%
summarise(count = sum(count))
private_survey_evote <- private_survey %>%
select(evote, party) %>%
filter(evote == 1) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
private_survey_psvote <- private_survey %>%
select(evote, party) %>%
filter(evote == 0) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
# Create contingency tables
contingency_table_evote <- rbind(public_results_evote, private_survey_evote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
contingency_table_evote
contingency_table_psvote <- rbind(public_results_psvote, private_survey_psvote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
# Chi-Square Test of Independence
# source, party, count
chisq_test_independence_evote <- chisq.test(contingency_table_evote)
chisq_test_independence_psvote <- chisq.test(contingency_table_psvote)
# Results
print(chisq_test_independence_evote)
print(chisq_test_independence_psvote)
# Sex
contingency_table <- table(private_survey$party, private_survey$sex)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Education
contingency_table <- table(private_survey$party, private_survey$education)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Marital status
contingency_table <- table(private_survey$party, private_survey$marital_status)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# ZIP
contingency_table <- table(private_survey$party, private_survey$zip)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# DOB
contingency_table <- table(private_survey$party, private_survey$dob)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Citizenship
contingency_table <- table(private_survey$party, private_survey$citizenship_region)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# DOB
contingency_table <- table(private_survey$party, private_survey$dob)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
print(contingency_table)
# Sex
contingency_table <- table(private_survey$evote, private_survey$sex)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# DOB
contingency_table <- table(private_survey$evote, private_survey$dob)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
print(contingency_table)
# ZIP
contingency_table <- table(private_survey$evote, private_survey$zip)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Education
contingency_table <- table(private_survey$evote, private_survey$education)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Citizenship
contingency_table <- table(private_survey$evote, private_survey$citizenship_region)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Marital status
contingency_table <- table(private_survey$evote, private_survey$marital_status)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Set working directory dynamically
setwd(dirname(this.path()))
private_survey <- read_excel("../data/raw/private_dataU.xlsx")
public_register <- read_excel("../data/raw/public_data_registerU.xlsx")
public_results_wide <- read_excel("../data/raw/public_data_resultsU.xlsx")
view(private_survey)
# Remove invalid votes
private_survey <- private_survey %>%
filter(party!="Invalid vote")
# Change name of first column in public_data_resultsU
names(public_results_wide)[1] <- "Voting_method"
names(public_results_wide)[4] <- "Invalid vote"
# Remove row and columns with sum
public_results_wide <- public_results_wide[-nrow(public_results_wide), c(-4,-5)]
# Transform dataframe to long format
public_results <- public_results_wide %>%
pivot_longer(
cols = `Red`:`Invalid vote`,
names_to = "party",
values_to = "count"
) %>%
mutate(source = "Result")
# Transform dataframe to long format
public_results <- public_results_wide %>%
pivot_longer(
cols = `Red`:`Green`,
names_to = "party",
values_to = "count"
) %>%
mutate(source = "Result")
public_results_evote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 1) %>%
group_by(source, party) %>%
summarise(count = sum(count))
public_results_psvote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 0) %>%
group_by(source, party) %>%
summarise(count = sum(count))
private_survey_evote <- private_survey %>%
select(evote, party) %>%
filter(evote == 1) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
private_survey_psvote <- private_survey %>%
select(evote, party) %>%
filter(evote == 0) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
# Create contingency tables
contingency_table_evote <- rbind(public_results_evote, private_survey_evote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
contingency_table_evote
contingency_table_psvote <- rbind(public_results_psvote, private_survey_psvote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
# Chi-Square Test of Independence
# source, party, count
chisq_test_independence_evote <- chisq.test(contingency_table_evote)
chisq_test_independence_psvote <- chisq.test(contingency_table_psvote)
# Results
print(chisq_test_independence_evote)
print(chisq_test_independence_psvote)
# Sex
contingency_table <- table(private_survey$party, private_survey$sex)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# DOB
contingency_table <- table(private_survey$party, private_survey$dob)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# ZIP
contingency_table <- table(private_survey$party, private_survey$zip)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Education
contingency_table <- table(private_survey$party, private_survey$education)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Citizenship
contingency_table <- table(private_survey$party, private_survey$citizenship_region)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Citizenship
contingency_table <- table(private_survey$party, private_survey$citizenship)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Marital status
contingency_table <- table(private_survey$party, private_survey$marital_status)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Sex
contingency_table <- table(private_survey$party, private_survey$sex)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# DOB
contingency_table <- table(private_survey$party, private_survey$dob)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# ZIP
contingency_table <- table(private_survey$party, private_survey$zip)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Education
contingency_table <- table(private_survey$party, private_survey$education)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Citizenship
contingency_table <- table(private_survey$party, private_survey$citizenship)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Marital status
contingency_table <- table(private_survey$party, private_survey$marital_status)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Sex
contingency_table <- table(private_survey$evote, private_survey$sex)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# DOB
contingency_table <- table(private_survey$evote, private_survey$dob)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# ZIP
contingency_table <- table(private_survey$evote, private_survey$zip)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Education
contingency_table <- table(private_survey$evote, private_survey$education)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Citizenship
contingency_table <- table(private_survey$evote, private_survey$citizenship_region)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Citizenship
contingency_table <- table(private_survey$evote, private_survey$citizenship)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Marital status
contingency_table <- table(private_survey$evote, private_survey$marital_status)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
# Chi-Square Test of Independence
# source, party, count
chisq_test_independence_evote <- chisq.test(contingency_table_evote)
chisq_test_independence_psvote <- chisq.test(contingency_table_psvote)
# Results
print(chisq_test_independence_evote)
print(chisq_test_independence_psvote)
private_survey <- read_excel("../data/anonymized/anonymized_data.xlsx")
public_results_wide <- read_excel("../data/raw/public_data_resultsU.xlsx")
names(private_survey)[1] <- "sex"
names(private_survey)[2] <- "evote"
names(private_survey)[3] <- "dob"
names(private_survey)[4] <- "zip"
names(private_survey)[5] <- "education"
names(private_survey)[6] <- "citizenship_region"
names(private_survey)[7] <- "marital_status"
names(private_survey)[8] <- "party"
# Remove invalid votes
private_survey <- private_survey %>%
filter(party!="Invalid vote")
# Change name of first column in public_data_resultsU
names(public_results_wide)[1] <- "Voting_method"
names(public_results_wide)[4] <- "Invalid vote"
# Remove row and columns with sum
public_results_wide <- public_results_wide[-nrow(public_results_wide), c(-4,-5)]
# Transform dataframe to long format
public_results <- public_results_wide %>%
pivot_longer(
cols = `Red`:`Green`,
names_to = "party",
values_to = "count"
) %>%
mutate(source = "Result")
public_results_evote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 1) %>%
group_by(source, party) %>%
summarise(count = sum(count))
public_results_psvote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 0) %>%
group_by(source, party) %>%
summarise(count = sum(count))
private_survey_evote <- private_survey %>%
select(evote, party) %>%
filter(evote == 1) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
private_survey_psvote <- private_survey %>%
select(evote, party) %>%
filter(evote == 0) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
# Create contingency tables
contingency_table_evote <- rbind(public_results_evote, private_survey_evote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
contingency_table_evote
contingency_table_psvote <- rbind(public_results_psvote, private_survey_psvote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
# Chi-Square Test of Independence
# source, party, count
chisq_test_independence_evote <- chisq.test(contingency_table_evote)
chisq_test_independence_psvote <- chisq.test(contingency_table_psvote)
# Results
print(chisq_test_independence_evote)
print(chisq_test_independence_psvote)
public_results_evote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 1) %>%
group_by(source, party) %>%
summarise(count = sum(count))
public_results_psvote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 0) %>%
group_by(source, party) %>%
summarise(count = sum(count))
private_survey_evote <- private_survey %>%
select(evote, party) %>%
filter(evote == 1) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
private_survey_psvote <- private_survey %>%
select(evote, party) %>%
filter(evote == 0) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
# Create contingency tables
contingency_table_evote <- rbind(public_results_evote, private_survey_evote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
contingency_table_evote
contingency_table_psvote <- rbind(public_results_psvote, private_survey_psvote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
# Chi-Square Test of Independence
# source, party, count
chisq_test_independence_evote <- chisq.test(contingency_table_evote)
chisq_test_independence_psvote <- chisq.test(contingency_table_psvote)
# Results
print(chisq_test_independence_evote)
print(chisq_test_independence_psvote)
private_survey <- read_excel("../data/raw/private_dataU.xlsx")
public_register <- read_excel("../data/raw/public_data_registerU.xlsx")
public_results_wide <- read_excel("../data/raw/public_data_resultsU.xlsx")
# Remove invalid votes
private_survey <- private_survey %>%
filter(party!="Invalid vote")
# Change name of first column in public_data_resultsU
names(public_results_wide)[1] <- "Voting_method"
names(public_results_wide)[4] <- "Invalid vote"
# Remove row and columns with sum
public_results_wide <- public_results_wide[-nrow(public_results_wide), c(-4,-5)]
# Transform dataframe to long format
public_results <- public_results_wide %>%
pivot_longer(
cols = `Red`:`Green`,
names_to = "party",
values_to = "count"
) %>%
mutate(source = "Result")
public_results_evote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 1) %>%
group_by(source, party) %>%
summarise(count = sum(count))
public_results_psvote <- public_results %>%
mutate(evote = case_when(
Voting_method != "E-votes" ~ 0,
T ~ 1,
)) %>%
filter(evote == 0) %>%
group_by(source, party) %>%
summarise(count = sum(count))
private_survey_evote <- private_survey %>%
select(evote, party) %>%
filter(evote == 1) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
private_survey_psvote <- private_survey %>%
select(evote, party) %>%
filter(evote == 0) %>%
group_by(party) %>%
summarise(count = n()) %>%
mutate(source = "Survey")
# Create contingency tables
contingency_table_evote <- rbind(public_results_evote, private_survey_evote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
contingency_table_evote
contingency_table_psvote <- rbind(public_results_psvote, private_survey_psvote) %>%
pivot_wider(names_from = party, values_from = count, values_fill = 0) %>%
column_to_rownames("source")
# Chi-Square Test of Independence
# source, party, count
chisq_test_independence_evote <- chisq.test(contingency_table_evote)
chisq_test_independence_psvote <- chisq.test(contingency_table_psvote)
# Results
print(chisq_test_independence_evote)
print(chisq_test_independence_psvote)
# Sex
contingency_table <- table(private_survey$party, private_survey$sex)
chisq_test_independence <- chisq.test(contingency_table)
print(chisq_test_independence)
